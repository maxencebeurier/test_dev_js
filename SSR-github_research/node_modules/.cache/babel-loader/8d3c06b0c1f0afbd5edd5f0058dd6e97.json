{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar Github =\n/*#__PURE__*/\nfunction () {\n  function Github() {\n    _classCallCheck(this, Github);\n  }\n\n  _createClass(Github, [{\n    key: \"research\",\n    value: function research(searchString) {\n      return new _Promise(function (resolve) {\n        fetch(\"https://api.github.com/search/repositories?q=\" + searchString, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        }).then(function (response) {\n          if (response.status === 200) {\n            return response.json();\n          } else {\n            return false;\n          }\n        }).then(function (data) {\n          return resolve(data);\n        });\n      });\n    }\n  }]);\n\n  return Github;\n}();\n\nexport { Github as default };","map":{"version":3,"sources":["/home/maxence/bizon_dev_test/SSR-github_research/pages/api/github.js"],"names":["Github","searchString","resolve","fetch","headers","then","response","status","json","data"],"mappings":";;;;IAAqBA,M;;;;;;;;;6BACXC,Y,EAAa;AACrB,aAAO,aAAY,UAAAC,OAAO,EAAE;AACzBC,QAAAA,KAAK,CAAC,kDAAgDF,YAAjD,EAA+D;AACnEG,UAAAA,OAAO,EAAE;AAAE,sBAAU,kBAAZ;AAAgC,4BAAgB;AAAhD;AAD0D,SAA/D,CAAL,CAGCC,IAHD,CAGM,UAAAC,QAAQ,EAAI;AAChB,cAAGA,QAAQ,CAACC,MAAT,KAAkB,GAArB,EAAyB;AACxB,mBAAOD,QAAQ,CAACE,IAAT,EAAP;AACA,WAFD,MAEK;AACJ,mBAAO,KAAP;AACA;AACJ,SATC,EAUCH,IAVD,CAUM,UAAAI,IAAI;AAAA,iBAAIP,OAAO,CAACO,IAAD,CAAX;AAAA,SAVV;AAWA,OAZI,CAAP;AAaA;;;;;;SAfmBT,M","sourcesContent":["export default class Github{\n\tresearch(searchString){\n\t\treturn new Promise(resolve=>{\n  \t\t\tfetch(\"https://api.github.com/search/repositories?q=\"+searchString, {\n\t\t    headers: { 'Accept': 'application/json', 'Content-Type': 'application/json'}\n\t\t  \t})\n\t\t   .then(response => {\n\t\t   \t\tif(response.status===200){\n\t\t   \t\t\treturn response.json();\n\t\t   \t\t}else{\n\t\t   \t\t\treturn false;\n\t\t   \t\t}\n\t\t\t})\n\t\t   .then(data => resolve(data));\n  \t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}